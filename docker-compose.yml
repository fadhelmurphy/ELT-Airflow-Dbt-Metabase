# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Basic Airflow cluster configuration for CeleryExecutor with Redis and PostgreSQL.
#
# WARNING: This configuration is for local development. Do not use it in a production deployment.
#
# This configuration supports basic configuration using environment variables or an .env file
# The following variables are supported:
#
# AIRFLOW_IMAGE_NAME         - Docker image name used to run Airflow.
#                              Default: apache/airflow:master-python3.8
# AIRFLOW_UID                - User ID in Airflow containers
#                              Default: 50000
# AIRFLOW_GID                - Group ID in Airflow containers
#                              Default: 50000
# _AIRFLOW_WWW_USER_USERNAME - Username for the administrator account.
#                              Default: airflow
# _AIRFLOW_WWW_USER_PASSWORD - Password for the administrator account.
#                              Default: airflow
#
# Feel free to modify this file to suit your needs.
---
version: '3'
x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: ./builds/airflow/Dockerfile
  environment:
    &airflow-common-env
    LOAD_EX: n
    _AIRFLOW_DB_MIGRATE: "true"
    _AIRFLOW_WWW_USER_CREATE: "true"
    _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USER_USERNAME}
    _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_USER_PASSWORD}
    ENGINE_CONNECT: ${ENGINE_CONNECT}
    

  volumes:
    - ./app/airflow/dags:/opt/airflow/dags
    - ./app/airflow/logs:/opt/airflow/logs
    - ./app/airflow/config:/opt/airflow/config
    - ./app/airflow/plugins:/opt/airflow/plugins
    - ./app/airflow/scripts:/opt/airflow/scripts
    - ./app/dbt:/opt/airflow/dbt
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./data/postgres/initdb:/docker-entrypoint-initdb.d
    expose:
      - ${POSTGRES_PORT}

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_BROWSER_PORT}:80
    volumes:
      - pgadmin-volume:/var/lib/pgadmin
    depends_on:
      - postgres

  metabase:
    image: metabase/metabase:latest
    restart: always
    volumes:
      - ./data/metabase-data:/tmp/metabase-data
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${MB_DB_DBNAME}
      MB_DB_PORT: ${POSTGRES_PORT}
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: postgres # Berdasarkan nama service db postgresql,
      MB_EMAIL_FROM_ADDRESS: fadhelijlalfalah@gmail.com
      MB_EMAIL_FROM_NAME: fadhelijlalfalah@gmail.com
      MB_DB_FILE: /tmp/metabase-data/metabase.db
      # MB_PASSWORD_COMPLEXITY: strong
      # MB_PASSWORD_LENGTH: 10
    ports:
      - ${MB_BROWSER_PORT}:3000
    depends_on:
      - postgres

  airflow-webserver:
    <<: *airflow-common
    restart: always
    command: >
      bash -c "airflow db upgrade && airflow scheduler -D && airflow webserver"
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_USER_USERNAME:-airflow}
    ports:
      - ${AIRFLOW_BROWSER_PORT}:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      - postgres

volumes:
  postgres-db-volume:
  pgadmin-volume: